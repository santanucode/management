stages:
  - build
  - deploy
build:
  stage: build
  image: node:16.20.0
  before_script:
    - apt-get update
    - apt-get install -y zip unzip
  script:
    - npm install --legacy-peer-deps
    - CI='' npm run build
    - rm -rf public
    - cp build/index.html build/404.html
    - mv build public
    - zip -r public.zip public
  artifacts:
    expire_in: 3 hour
    paths:
      - public.zip
  only:
    - main

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
    - echo -e "\n\tHostkeyAlgorithms +ssh-rsa\n" >> ~/.ssh/config
    - echo -e "\n\tPubkeyAcceptedAlgorithms +ssh-rsa\n" >> ~/.ssh/config
    - chmod 700 ~/.ssh
  script:
  #  - ssh -v  -o StrictHostKeyChecking=no  ubuntu@$REMOTE_HOST "cd $REMOTE_PATH; rm -r *.js; rm -r *.json; rm -r *.html; rm -r *.png; rm -rf static; exit"
    - scp -v  -o StrictHostKeyChecking=no  public.zip ubuntu@$REMOTE_HOST:/home/ubuntu
    - ssh -v -o StrictHostKeyChecking=no   ubuntu@$REMOTE_HOST "sudo ./oslapp_depployer.sh;exit"
  only:
    - main
